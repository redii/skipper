{"version":3,"sources":["utils/history.js","components/Router/Views/Default/Header/Header.js","components/Router/Views/Default/Paragraph/Paragraph.js","components/Router/Views/Default/List/List.js","components/Router/Views/Default/Hint/Hint.js","components/Router/Views/Default/Table/Table.js","components/Router/Views/Default/Default.js","components/Router/Views/ViewsArray.js","components/Router/Views/Views.js","components/Router/Router.js","components/Footer/Footer.js","components/App.js","utils/serviceWorker.js","index.js"],"names":["createBrowserHistory","Header","className","this","props","title","hidden","subTitle","mutedSubTitle","Button","color","size","outline","onClick","history","goBack","hideBackButton","Component","Paragraph","state","body","List","buildList","bind","ListGroup","flush","map","item","idx","ListGroupItem","key","push","destination","disabled","action","Hint","isOpen","toggle","setState","image","Collapse","Card","CardBody","CardTitle","CardText","Table","columns","column","name","rows","row","property","Default","content","type","viewsArray","path","exact","layout","href","target","rel","subs","ip","user","pass","style","marginLeft","textAlign","textIndent","src","alt","width","Views","buildView","recursiveBuild","route","component","routes","result","length","ViewRouter","Footer","id","Date","getFullYear","App","Router","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.80b54a45.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history'\n\nexport default createBrowserHistory()\n","import React, { Component } from 'react'\nimport './Header.css'\n\nimport history from 'utils/history'\nimport { Button } from 'reactstrap'\n\nclass Header extends Component {\n\n  render() {\n    return (\n      <div className=\"Header\">\n        <h1>{this.props.title}</h1>\n        <br hidden={!this.props.subTitle}/>\n        <p className=\"lead\">{this.props.subTitle}</p>\n        <br hidden={!this.props.mutedSubTitle}/>\n        <p className=\"text-muted\">{this.props.mutedSubTitle}</p>\n        <Button color=\"primary\" size=\"sm\" outline onClick={() => history.goBack()} hidden={this.props.hideBackButton}>zurück</Button>\n      </div>\n    )\n  }\n\n}\n\nexport default Header\n","import React, { Component } from 'react'\nimport './Paragraph.css'\n\nclass Paragraph extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {}\n  }\n\n  render() {\n    return (\n      <div className=\"Content Paragraph\">\n        <hr />\n        <h5>{this.props.title}</h5>\n        <span>{this.props.body}</span>\n      </div>\n    )\n  }\n\n}\n\nexport default Paragraph\n","import React, { Component } from 'react'\nimport './List.css'\n\nimport history from 'utils/history'\nimport { ListGroup, ListGroupItem } from 'reactstrap'\n\nclass List extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {}\n    this.buildList = this.buildList.bind(this)\n  }\n\n  buildList() {\n    return (\n      <ListGroup flush={this.props.flush}>\n        {this.props.body.map((item, idx) => {\n          return (\n            <ListGroupItem\n              key={idx}\n              onClick={() => history.push(item.destination)}\n              disabled={item.disabled}\n              className={item.disabled ? \"text-muted\" : \"\"}\n              action>\n              {item.body}\n            </ListGroupItem>\n          )\n        })}\n      </ListGroup>\n    )\n  }\n\n  render() {\n    return (\n      <div className=\"Content List\">\n        <hr />\n        <h5>{this.props.title}</h5>\n        {this.buildList()}\n      </div>\n    )\n  }\n\n}\n\nexport default List\n","import React, { Component } from 'react'\nimport './Hint.css'\n\nimport { Collapse, Button, Card, CardBody, CardTitle, CardText } from 'reactstrap'\n// CardImg, CardSubtitle\n\nclass Hint extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      isOpen: false\n    }\n\n    this.toggle = this.toggle.bind(this)\n  }\n\n  toggle() {\n    this.setState({ isOpen: !this.state.isOpen })\n  }\n\n  render() {\n\n    let image\n    if (this.props.image) {\n      image = \"image123\"\n    }\n\n    return (\n      <div className=\"Content Hint\">\n        <Button color=\"primary\" outline onClick={this.toggle}>Hinweis</Button>\n        <Collapse isOpen={this.state.isOpen}>\n          <Card>\n            {image}\n            <CardBody>\n              <CardTitle>{this.props.title}</CardTitle>\n              <CardText>{this.props.body}</CardText>\n            </CardBody>\n          </Card>\n        </Collapse>\n      </div>\n    )\n  }\n\n}\n\nexport default Hint\n","import React, { Component } from 'react'\nimport './Table.css'\n\nimport { Table as RSTable } from 'reactstrap'\n\nclass Table extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {}\n  }\n\n  render() {\n    return (\n      <div className=\"Content Table\">\n        <hr />\n        <h5>{this.props.title}</h5>\n        <RSTable>\n          <thead>\n            <tr>\n              {this.props.columns.map((column, idx) => <th key={idx}>{column.name}</th>)}\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.rows.map((row, idx) => {\n              return (\n                <tr key={idx}>\n                  {this.props.columns.map((column, idx) => <td key={idx}>{row[column.property]}</td>)}\n                </tr>\n              )\n            }, this)}\n          </tbody>\n        </RSTable>\n      </div>\n    )\n  }\n\n}\n\nexport default Table\n","import React, { Component } from 'react'\nimport './Default.css'\n\nimport Header from './Header/Header'\nimport Paragraph from './Paragraph/Paragraph'\nimport List from './List/List'\nimport Hint from './Hint/Hint'\nimport Table from './Table/Table'\n\nclass Default extends Component {\n\n  render() {\n    return (\n      <div className=\"Default\">\n        {this.props.content.map((props, idx) => {\n          switch (props.type) {\n            case \"header\":\n              return <Header key={idx} {...props} />\n\n            case \"paragraph\":\n              return <Paragraph key={idx} {...props} />\n\n            case \"list\":\n              return <List key={idx} {...props} />\n\n            case \"hint\":\n              return <Hint key={idx} {...props} />\n\n            case \"table\":\n              return <Table key={idx} {...props} />\n\n            default:\n              return null\n          }\n        })}\n      </div>\n    )\n  }\n\n}\n\nexport default Default\n","import React from 'react'\n\nimport history from 'utils/history'\nimport Default from './Default/Default'\n\nconst viewsArray = [\n  {\n    key: '1',\n    name: 'Home',\n    path: '/',\n    exact: true,\n    layout: Default,\n    content: [\n      {\n        type: \"header\",\n        title: \"IT-Administrator (IHK)\",\n        subTitle: \"Zertifikatslehrgang am TA Bildungszentrum\",\n        mutedSubTitle: \"Begleitende Aufgaben und Informationen\",\n        hideBackButton: true\n      },\n      {\n        type: \"paragraph\",\n        title: \"👨‍🎓 Über diese Seite...\",\n        body:\n          <div>\n            <p>\n              Meine Idee war es eine Plattform zu schaffen über welche ich\n              meine Unterlagen, Hilfestellungen und Aufgaben schnell und einfach\n              für Teilnehmer der Kurse bereitstellen kann. Aus dieser Idee ist\n              eben diese Anwendung entstanden.\n            </p>\n            <p>\n              Wer einmal hinter die Kulissen der Anwendung gucken möchte,\n              kann dies im dazugehörigen Projekt, <a href=\"https://github.com/redii/itadm\" target=\"_blank\" rel=\"noopener noreferrer\">hier</a> tun.\n              Dort habe ich zudem Teile der Anwendung erklärt und zusätzlich\n              genutzte Frameworks aufgelistet. Bei konkreten Fragen können\n              Sie mich auch gerne nochmal direkt darauf ansprechen.\n            </p>\n            <p>\n              Beginnen Sie damit das aktuelle Vorlesungsthema unten auszuwählen.\n            </p>\n          </div>\n      },\n      {\n        type: \"list\",\n        title: \"📑 Studieninhalte\",\n        body: [{\n            body: \"IT-Grundlagen\",\n            destination: \"/grundlagen\",\n            disabled: true,\n          },\n          {\n            body: \"Microsoft Windows\",\n            destination: \"/windows\",\n            disabled: true,\n          },\n          {\n            body: \"Linux/Unix\",\n            destination: \"/linux\",\n            disabled: true,\n          },\n          {\n            body: \"Netzwerkadministration\",\n            destination: \"/netzwerk\",\n            disabled: true,\n          },\n          {\n            body: \"Scripting\",\n            destination: \"/scripting\",\n            disabled: true,\n          },\n          {\n            body: \"Serversysteme und Monitoring\",\n            destination: \"/server\",\n          },\n          {\n            body: \"Systemanalyse und Management\",\n            destination: \"/systemanalyse\",\n            disabled: true,\n          },\n          {\n            body: \"Datensicherheit\",\n            destination: \"/datensicherheit\",\n            disabled: true,\n          },\n        ]\n      },\n    ]\n  },\n\n\n  {\n    key: '2',\n    name: 'Serversysteme und Monitoring',\n    path: '/server',\n    exact: true,\n    layout: Default,\n    content: [\n      {\n        type: \"header\",\n        title: \"Serversysteme und Monitoring\",\n        subTitle: \"Verschiedene Serverarten und Ihre Protokolle\",\n        mutedSubTitle: \"Funktionsweise und Konfiguration\"\n      },\n      {\n        type: \"paragraph\",\n        title: \"💡 Foliensätze\",\n        body:\n          <p>\n            Ich habe Ihnen die Foliensätze aus der Vorlesung auch nochmal\n            digital in meinem Google Drive Ordner abgelegt. Die Dateien finden\n            Sie <a href=\"https://drive.google.com/open?id=1jAVLTz3SNmBbfHlRN9A_4Xw7nDfOsEpW\" target=\"_blank\" rel=\"noopener noreferrer\">hier</a>.\n          </p>\n      },\n      {\n        type: \"paragraph\",\n        title: \"🔑 Bevor wir anfangen...\",\n        body:\n          <p>\n            <span className=\"history\" onClick={() => history.push('/server/vps')}>Hier</span> finden\n            Sie die Zugangsdaten Ihrer Test-Server. Nutzen Sie diese um sich\n            mit dem System zu verbinden und die Aufgaben zu bearbeiten.\n          </p>\n      },\n      {\n        type: \"list\",\n        title: \"Aufgaben zu den Serverarten\",\n        body: [\n          {\n            body: \"Nameserver\",\n            destination: \"/server/dns\"\n          }, {\n            body: \"Webserver\",\n            destination: \"/server/web\"\n          }, {\n            body: \"Fileserver\",\n            destination: \"/server/ftp\"\n          }, {\n            body: \"Proxyserver\",\n            destination: \"/server/proxy\"\n          }\n        ]\n      }\n    ],\n\n    subs: [\n      {\n        key: '2.1',\n        name: 'Virtual Private Servers',\n        path: '/server/vps',\n        exact: true,\n        layout: Default,\n        content: [\n          {\n            type: \"header\",\n            title: \"Virtual Private Servers\",\n            subTitle: \"Zugangsdaten Ihrer Test-Server\"\n          },\n          {\n            type: \"paragraph\",\n            title: \"Bearbeitung der Aufgaben\",\n            body:\n              <div>\n                <p>\n                  Leider hatte ich in der Vergangenheit immer wieder Probleme mit dem Netzwerkzugriff\n                  bei lokal installierten virtuellen Maschinen, weshalb ich Ihnen für die Bearbeitung\n                  der Aufgaben sogenannte Virtual Private Servers, kurz VPS, zur Verfügung stelle. Diese\n                  Maschinen sind über das Internet von überall aus erreichbar, da sie anhand öffentlicher\n                  IP-Adressen über das Internet angesprochen werden können.\n                </p>\n              </div>\n          },\n          {\n            type: \"paragraph\",\n            title: \"Digital Ocean\",\n            body:\n              <div>\n                <p>\n                  Die Server habe ich bei dem Cloudanbieter DigitalOcean gemietet, welcher seinen Service\n                  auch für Privatpersonen über eine moderne Weboberfläche bereitstellt. Der Service kann\n                  durch jeden genutzt werden, um schnell und einfach Serversysteme und andere Dienste\n                  zu mieten.\n                </p>\n                <p>\n                  DigitalOcean ist als Cloudanbieter in der Lage Serversysteme und andere Dienste\n                  vollautomatisiert in Sekunden bereitstellen zu können. Auch die Abrechnung der Dienste ist\n                  ähnlich dynamisch, so erfolgt diese minutengenau, sodass Sie am Ende nur das zahlen was Sie\n                  auch genutzt haben.\n                </p>\n                <p>\n                  Wer mich unterstützen möchte kann sich gerne über meinen Referral-Link bei DigitalOcean\n                  anmelden. Für Sie entstehen dabei keine Kosten und Sie erhalten ein 50$ Kontigent für die\n                  ersten 30 Tage nach der Anmeldung. Zur Anmeldung gelanden Sie <a href=\"https://m.do.co/c/c004d8619807\" target=\"_blank\" rel=\"noopener noreferrer\">hier</a>.\n                </p>\n              </div>\n          },\n          {\n            type: \"paragraph\",\n            title: \"Zugriff auf den Server\",\n            body:\n              <div>\n                <p>\n                  Die Server bieten Ihnen keine grafische Oberfläche und können ausschließlich über die\n                  Kommandozeile bedient werden. Um Zugriff auf die Kommandozeile zu bekommen, müssen Sie\n                  per SSH auf den Server zugreifen. Das heißt Sie benötigen zunächst eine Software, welche\n                  es ihnen er möglicht diesen Dienst zu nutzen. Sowie Chrome oder Firefox die Client-Software\n                  ist welche Ihnen den Webzugriff per HTTP ermöglicht, ist Putty die Softwarelösung für den\n                  benötigten Zugriff per SSH auf den Server. Putty können sie ganz\n                  einfach <a href=\"https://the.earth.li/~sgtatham/putty/latest/w64/putty.exe\">hier</a> herunterladen.\n                </p>\n                <p>\n                  Nachdem Sie Putty gestartet haben werden Sie im oberen Bereich ein Feld mit der Beschriftung <strong>Host Name</strong> sehen.\n                  Hier müssen Sie die IP-Adresse Ihres Serversystems eintragen. Mit anschließenden\n                  klicken auf den Open-Button öffnet sich ein neues Fenster, in welchem Sie sich als root-User\n                  authentifizieren müssen. Beim erstmaligen Verbinden wird Ihnen eine Warnung gezeigt werden,\n                  welche Sie mit OK bestätigen müssen (dazu später mehr). Vergeben Sie anschließend ein neues\n                  Kennwort.\n                </p>\n              </div>\n          },\n          {\n            type: \"table\",\n            title: \"Zugangsdaten\",\n            columns: [\n              {\n                name: \"IP-Adresse\",\n                property: \"ip\"\n              },\n              {\n                name: \"Benutzer\",\n                property: \"user\"\n              },\n              {\n                name: \"Passwort\",\n                property: \"pass\"\n              }\n            ],\n            rows: [\n              {\n                ip: \"138.68.76.99\",\n                user: \"root\",\n                pass: \"afd7223bad5bd7fe2e250a9b64\"\n              },\n              {\n                ip: \"139.59.148.55\",\n                user: \"root\",\n                pass: \"68deb1afc164c26f4868bd00ea\"\n              },\n              {\n                ip: \"138.68.75.198\",\n                user: \"root\",\n                pass: \"bdd89a7d53d190bf4998b72bce\"\n              },\n              {\n                ip: \"157.230.120.94\",\n                user: \"root\",\n                pass: \"ffd8c3f85f1616b1a9ddaed19a\"\n              },\n              {\n                ip: \"138.68.77.165\",\n                user: \"root\",\n                pass: \"8ad5beba75b923a6efad14edcb\"\n              },\n              {\n                ip: \"167.71.53.56\",\n                user: \"root\",\n                pass: \"1efbdeef67dad4be8b9cf5ed6d\"\n              },\n              {\n                ip: \"142.93.167.149\",\n                user: \"root\",\n                pass: \"34cb9c532c77c02a7dd1a71288\"\n              },\n              {\n                ip: \"139.59.211.214\",\n                user: \"root\",\n                pass: \"261177f6a434b76797915e456d\"\n              },\n              {\n                ip: \"165.22.83.57\",\n                user: \"root\",\n                pass: \"4c125ab6233719526c7535d86d\"\n              },\n              {\n                ip: \"68.183.79.169\",\n                user: \"root\",\n                pass: \"56d71732f76101c2fb78327250\"\n              },\n              {\n                ip: \"138.68.74.101\",\n                user: \"root\",\n                pass: \"38e86e0f86ff395e854e97228d\"\n              },\n              {\n                ip: \"167.71.60.146\",\n                user: \"root\",\n                pass: \"ddf1d500837a614ee486e77db8\"\n              },\n            ]\n          },\n        ]\n      },\n\n\n      {\n        key: '2.2',\n        name: 'Nameserver',\n        path: '/server/dns',\n        exact: true,\n        layout: Default,\n        content: [\n          {\n            type: \"header\",\n            title: \"Nameserver\",\n            subTitle: \"Konfigurieren eines Bind Nameservers\",\n            mutedSubTitle: \"unter Ubuntu 18.04\"\n          },\n          {\n            type: \"paragraph\",\n            title: 'Ziel der Aufgabe',\n            body:\n              <div>\n                <p>\n                  Die Aufgabe besteht darin einen Bind Nameserver auf Ihrem System\n                  zu installieren und anschließend zu konfigurieren. Das grobe Ziel\n                  ist dass Ihr Server für eine Domain zuständig ist und die DNS-Einträge\n                  für diese verwaltet.\n                </p>\n                <p>\n                  Beispielsweise können Sie die Domain <strong>itadm.de</strong> für\n                  Ihren Server hinterlegen und anschließend DNS-Einträge wie <strong>www</strong>.itadm.de\n                  für diese definieren. Am Ende sollen Sie eine manuelle Namensauflösung Ihrer\n                  konfigurierten Domain gegen den Server vornehmen und eine IP-Adresse zurück\n                  erhalten. Zum Beispiel die Adresse 1.2.3.4 bei der Auflösung von www.itadm.de.\n                </p>\n              </div>\n          },\n          {\n            type: \"paragraph\",\n            title: '1. Installieren Sie das \"bind9\" Paket auf Ihrem System',\n            body:\n              <div>\n                <p>\n                  Um das Paket auf ihrem System zu installieren nutzen sie das\n                  vorhandene Paketverwaltungssystem. Unter Debian/Ubuntu können\n                  Sie hierfür APT benutzen.\n                </p>\n                <p className=\"text-muted\">\n                  Eine genaue Funktionsbeschreibung zur Bedienung von APT finden\n                  Sie <a href=\"https://wiki.ubuntuusers.de/apt/apt-get/\" target=\"_blank\" rel=\"noopener noreferrer\">hier</a>.\n                </p>\n              </div>\n          },\n          {\n            type: \"hint\",\n            body:\n              <div>\n                <p>\n                  Für die Installation von <strong>bind9</strong> mit Hilfe des\n                  Paketmanagers <strong>apt</strong>, müssen Sie das folgende\n                  Kommando ausführen:\n                </p>\n                <kbd>apt-get install bind9</kbd><br/><br/>\n                <p>\n                  Sollte es wegen fehlenden Berechtigungen während der Installation\n                  zu Problemen kommen, können Sie mit dem Zusatz <kbd>sudo</kbd> vor\n                  dem apt-get Kommando die benötigten Rechte erlangen.\n                </p>\n              </div>\n          },\n          {\n            type: \"paragraph\",\n            title: '2. Öffnen Sie das Installationsverzeichnis des Bind Servers',\n            body:\n              <p>\n                Unter Linux werden Softwarepakete in der Regel im <strong>/etc</strong> Verzeichnis\n                in einem eigenen Ordner installiert. Nutzen Sie die bekannten Befehle, um in diesen\n                Ordner zu gelangen.\n              </p>\n          },\n          {\n            type: \"hint\",\n            body:\n              <div>\n                <p>\n                  Nutzen Sie den <strong>cd</strong> Befehl (Change Directory), um in das\n                  Installationsverzeichnis des Bind Servers zu gelangen.\n                </p>\n                <kbd>cd /etc/bind</kbd>\n              </div>\n          },\n          {\n            type: \"paragraph\",\n            title: '3. Konfiguration des Servers',\n            body:\n              <div>\n                <p>\n                  Im Installationsverzeichnis finden Sie verschiedene Ordner und Dateien.\n                  Darunter auch verschiedene Konfigurationsdateien, welche unter der named.conf\n                  durch includes zusammengeführt werden. Jede dieser Dateien hat daher eine\n                  eigene Funktion.\n                </p>\n                <p>\n                  Nehmen Sie die folgenden Konfigurationen am grundlegen Serververhalten in der\n                  passenden Konfigurationsdatei vor. Welche könnte dies sein?\n                </p>\n                <ul>\n          \t\t\t\t<li>recursion yes;</li>\n          \t\t\t\t<li>forwarders {\"{ 8.8.8.8; 8.8.4.4; };\"}</li>\n          \t\t\t\t<li>allow-query {\"{ any; };\"}</li>\n          \t\t\t</ul>\n                <p className=\"text-muted\">\n                  Achtung! Die Konfigurationen müssen innerhalb der äußeren geschweiften\n                  Klammern {\"{ ... }\"} hinzugefügt werden. Eine Zusammenfassung zur Konfiguration\n                  von Bind finden Sie <a href=\"https://www.digitalocean.com/community/tutorials/how-to-configure-bind-as-a-private-network-dns-server-on-ubuntu-14-04#install-bind-on-dns-servers\">hier</a>.\n                </p>\n              </div>\n          },\n          {\n            type: \"hint\",\n            body:\n              <div>\n                <p>\n                  Die Konfigurationsdatei wurde in mehrere Teile gesplittet, um diese logisch voneinander\n                  zu trennen und somit eine Ordnung zu schaffen. Beim einlesen der named.conf werden dann\n                  die Teildateien wieder in eine inkludiert.\n                </p>\n                <p>\n                  Die Kofiguration der Grundlegenden Funktionsweise wird bei dieser Aufteilung in der\n                  \"named.conf.options\" vorgenommen. Öffne nen Sie diese mit Hilfe von nano.\n                </p>\n                <kbd>nano /etc/bind/named.conf.options</kbd><br/><br/>\n                <p><strong>recursion yes;</strong> Erlaubt rekursives Auflösen von Domains für einen Client.</p>\n                <p><strong>forwarders {\"{ 8.8.8.8; 8.8.4.4; };\"}</strong> Der Server leitet Anfragen für die er selber keine Lösung kennt, an den Google DNS Service weiter.</p>\n                <p><strong>allow-query {\"{ any; };\"}</strong> Erlaubt Anfragen von jedem System bzw. jeder Source IP-Adresse.</p>\n              </div>\n          },\n          {\n            type: \"paragraph\",\n            title: '4. Legen Sie eine neue Zone auf dem Server an',\n            body:\n              <div>\n                <p>\n                  Um eine neue Zone bzw. Domain zu definieren, müssen Sie diese in der dafür vorgesehenden Konfugurationsdatei\n                  hinterlegen. Für die Zone können Sie im Anschluss DNS-Einträge definieren, welche dann durch den Server selbst\n                  aufgelöst werden können.\n                </p>\n                <p>\n                  Achten Sie darauf den Fully Qualified Domain Name (FQDN) für die Konfiguration zu nutzen.\n                </p>\n                <p className=\"text-muted\">\n                  Eine genauere Anleitung zur Registrierung einer neuen Zone finden Sie\n                  Sie <a href=\"https://help.ubuntu.com/community/BIND9ServerHowto#Primary_Master_Server_configuration\" target=\"_blank\" rel=\"noopener noreferrer\">hier</a>.\n                </p>\n              </div>\n          },\n          {\n            type: \"hint\",\n            body:\n              <div>\n                <p>\n                  Eine neue Domain bzw. Zone kann in der named.conf.local vorgenommenwerden.\n                </p>\n                <kbd>nano /etc/bind/named.conf.local</kbd><br/><br/>\n                <div style={{marginLeft:'10%', textAlign:'left'}}>\n                  <span style={{textIndent:'0'}}>zone \"itadm.de.\" {\"{\"}</span><br/>\n                  <span style={{marginLeft:'2em'}}>type master;</span><br/>\n                  <span style={{marginLeft:'2em'}}>file \"/etc/bind/db.itadm.de\";</span><br/>\n                  <span style={{textIndent:'0'}}>{\"};\"}</span>\n                </div>\n              </div>\n          },\n          {\n            type: \"paragraph\",\n            title: '5. Erstellen Sie die dazugehörige Zonendatei',\n            body:\n              <div>\n                <p>\n                  Bei der Konfiguration der Zone haben Sie soeben den Pfad einer Zonendatei angegeben, welche Sie nun erstellen\n                  müssen. In dieser Zonendatei werden die DNS-Einträge bzw. Ressource Records hinterlegt, welche in IP-Adressen\n                  o.ä. aufgelöst werden können.\n                </p>\n                <p>\n                  Sie können die leere Templatedatei <strong>db.empty</strong> als Vorlage nutzen. Hinterlegen Sie in der neu angelegten Datei\n                  anschließend einen Eintrag für die Domain <strong>www.itadm.de</strong> auf eine beliebige IPv4 Adresse.\n                </p>\n              </div>\n          },\n          {\n            type: \"hint\",\n            body:\n              <div>\n                <p>\n                  Kopieren Sie die <strong>db.empty</strong> Datei mit Hilfe des folgenden Kommandos (Copy).\n                </p>\n                <kbd>cp db.empty db.itadm.de</kbd><br/><br/>\n                <p>\n                  Öffnen Sie die kopierte Datei anschließend und nehmen Sie die benötigten Konfigurationen vor.\n                </p>\n                <kbd>nano db.itadm.de</kbd><br/><br/>\n                <img src=\"/images/dns_zone.png\" alt=\"Zonendatei\" width=\"100%\" />\n              </div>\n          },\n          {\n            type: \"paragraph\",\n            title: '6. Starten Sie den Server neu',\n            body:\n              <div>\n                <p>\n                  Damit Ihre gerade vorgenommenen Konfigurationen berücksichtigt werden, müssen Sie den Server zunächst erst einmal\n                  neustarten. Dabei werden die Konfigurationsdateien des Servers neu eingelesen und Ihre Änderungen eingespielt.\n                </p>\n                <p>\n                  Überprüfen Sie ob der Server erfolgreich neugestartet wurden, indem Sie auch den Status des Diensts prüfen. Führen\n                  Sie dafür die folgenden Kommandos aus.\n                </p>\n                Neustart des Servers: <kbd>service bind9 restart</kbd><br/><br/>\n                Statusmeldung des Diensts: <kbd>service bind9 status</kbd>\n              </div>\n          },\n          {\n            type: \"paragraph\",\n            title: '7. Nutzen Sie den Server für eine Namensauflösung',\n            body:\n              <div>\n                <p>\n                  Um den Server abschließend zu prüfen, können Sie die konfigurierte Domain bzw. den dafür hinterlegten DNS-Eintrag\n                  manuell abfragen. Wechseln Sie hierfür zurück in Ihr Windows-System und starten Sie von hier aus eine manuelle\n                  Namensauflösung.\n                </p>\n                <p>\n                  Was dabei passiert: Ihr Windows-Rechner spricht Ihren Server über das Internet an und fragt nach der Auflösung der\n                  Domain <strong>www.itadm.de</strong>. Ihr Nameserver sollte dann mit der gerade konfigurierten IP-Adresse antworten.\n                  Führen Sie für die manuelle Namensauflösung in der Windows-Kommandozeile folgendes Kommando aus.\n                </p>\n                Manuelle Namensauflösung: <kbd>nslookup www.itadm.de [IP Ihres Servers]</kbd>\n              </div>\n          },\n        ]\n      },\n\n\n      {\n        key: '2.3',\n        name: 'Webserver',\n        path: '/server/web',\n        exact: true,\n        layout: Default,\n        content: [\n          {\n            type: \"header\",\n            title: \"Webserver\",\n            subTitle: \"Konfigurieren eines Apache Webservers\",\n            mutedSubTitle: \"unter Ubuntu 18.04\"\n          },\n          {\n            type: \"paragraph\",\n            title: 'Ziel der Aufgabe',\n            body:\n              <div>\n                <p>\n                  Die Aufgabe besteht darin einen Apache Webserver auf Ihrem System\n                  zu installieren und anschließend zu konfigurieren. Das grobe Ziel\n                  ist, dass Sie neben der Apache-Default Seite des Servers eine zweite\n                  Webseite zeitgleich betreiben.\n                </p>\n                <p>\n                  Um eine zweite Webseite zeitgleich zu betreiben, müssen Sie zunächst\n                  einen weiteren Port z.B. 8080 für den Server konfigurieren. Dadurch\n                  können Sie anschließend eine Webseite über den Port 80 und eine andere\n                  über den Port 8080 durch den selber Serverhost betreiben.\n                </p>\n              </div>\n          },\n          {\n            type: \"paragraph\",\n            title: '1. Installieren Sie das \"apache2\" Paket auf Ihrem System',\n            body:\n              <div>\n                <p>\n                  Um das Paket auf ihrem System zu installieren nutzen sie das\n                  vorhandene Paketverwaltungssystem. Unter Debian/Ubuntu können\n                  Sie hierfür APT benutzen.\n                </p>\n                <p className=\"text-muted\">\n                  Eine genaue Funktionsbeschreibung zur Bedienung von APT finden\n                  Sie <a href=\"https://wiki.ubuntuusers.de/apt/apt-get/\" target=\"_blank\" rel=\"noopener noreferrer\">hier</a>.\n                </p>\n              </div>\n          },\n          {\n            type: \"hint\",\n            body:\n              <div>\n                <p>\n                  Für die Installation von <strong>apache2</strong> mit Hilfe des\n                  Paketmanagers <strong>apt</strong>, müssen Sie das folgende\n                  Kommando ausführen:\n                </p>\n                <kbd>apt-get install apache2</kbd><br/><br/>\n                <p>\n                  Sollte es wegen fehlenden Berechtigungen während der Installation\n                  zu Problemen kommen, können Sie mit dem Zusatz <kbd>sudo</kbd> vor\n                  dem apt-get Kommando die benötigten Rechte erlangen.\n                </p>\n              </div>\n          },\n          {\n            type: \"paragraph\",\n            title: '2. Öffnen Sie das Installationsverzeichnis des Webservers',\n            body:\n              <p>\n                Unter Linux werden Softwarepakete in der Regel im <strong>/etc</strong> Verzeichnis\n                in einem eigenen Ordner installiert. Nutzen Sie die bekannten Befehle, um in diesen\n                Ordner zu gelangen.\n              </p>\n          },\n          {\n            type: \"hint\",\n            body:\n              <div>\n                <p>\n                  Nutzen Sie den <strong>cd</strong> Befehl (Change Directory), um in das\n                  Installationsverzeichnis des Apache2 Webservers zu gelangen.\n                </p>\n                <kbd>cd /etc/apache2</kbd>\n              </div>\n          },\n          {\n            type: \"paragraph\",\n            title: '3. Konfigurieren Sie den Webserver für den Port 8080',\n            body:\n              <div>\n                <p>\n                  Damit Sie eine weitere Webseite über den selben Webserver ausliefern können, müssen\n                  Sie zunächst einen zweiten Port konfigurieren auf welchen der Server horchen soll.\n                  Anschließend können Sie den Port 8080 für die zweite Webseite nutzen, während die\n                  bereits vorhandene Standardseite weiterhin über den Port 80 ausgeliefert wird.\n                </p>\n                <p>\n                  Nehmen Sie die Konfiguration der Ports in der dazugehörigen <strong>ports.conf</strong> Datei vor.\n                </p>\n              </div>\n          },\n          {\n            type: \"hint\",\n            body:\n              <div>\n                <p>\n                  Öffnen Sie dafür zunächst die Datei mit Hilfe des <strong>nano</strong> Kommandos wie folgt.\n                </p>\n                <kbd>nano ports.conf</kbd><br/><br/>\n                <p>\n                  Fügen Sie anschließend <strong>Listen 8080</strong> in die Datei ein. Passen Sie hierbei auf,\n                  dass Sie die Zeile nicht innerhalb der dort bereits hinterlegten IF-Abfragen für HTTPS über 443 hinzufügen.\n                </p>\n              </div>\n          },\n          {\n            type: \"paragraph\",\n            title: '4. Legen Sie einen neuen Virtual Host an',\n            body:\n              <div>\n                <p>\n                  Mit dem Anlegen eines neuen Virtual Hosts, signalisieren wir dem Webserver, dass er für noch eine\n                  weitere Webseite zuständig ist. Bei der Konfiguration dieses Virtual Hosts müssen wir daher dem\n                  Server mitgeben, über welchen Port die Webseite angefordert wird und wo die Dateien der Webseite\n                  im Filesystem zu finden sind (DocumentRoot).\n                </p>\n                <p>\n                  Als Vorlage für den neuen Virtual Host können Sie die <strong>sites-available/000-default.conf</strong> nutzen.\n                  Ähnlich wie Sie es zuvor bei dem Nameserver getan hatten, können Sie diese Datei kopieren und anschließend\n                  wie gewünscht anpassen.\n                </p>\n              </div>\n          },\n          {\n            type: \"hint\",\n            body:\n              <div>\n                <p>\n                  Kopieren Sie die Vorlage mit Hilfe des folgenden Kommandos.\n                </p>\n                <kbd>cp sites-available/000-default.conf sites-available/webseite.conf</kbd><br/><br/>\n                <p>\n                  Öffnen Sie die kopierte Datei mit dem nano Kommando und nehmen Sie die folgenden Anpassungen vor.\n                </p>\n                <kbd>VirtualHost *:8080</kbd><br/>\n                <kbd>DocumentRoot /var/www/webseite</kbd>\n              </div>\n          },\n          {\n            type: \"paragraph\",\n            title: '5. Legen Sie das Verzeichnis der zweiten Webseite an',\n            body:\n              <div>\n                <p>\n                  Soeben haben Sie bei der Konfiguration des zweiten VirtualHosts einen DocumentRoot definiert, unter welchem\n                  der Server die Dateien der Webseite, welche er ausliefern wird, findet. Dieser Ordner ist aktuell noch nicht\n                  vorhanden und auch HTML-Dateien der Webseite müssen zunächst angelegt werden.\n                </p>\n                <p>\n                  Legen Sie nun also den Ordner <strong>/var/www/webseite</strong> an und erstellen Sie anschließend darin eine\n                  neue <strong>index.html</strong> Datei, welche standardmäßig durch den Werbserver ausgeliefert wird.\n                </p>\n              </div>\n          },\n          {\n            type: \"hint\",\n            body:\n              <div>\n                <p>\n                  Um das neue Verzeichnis anzulegen, nutzen Sie das folgende Kommando (Make Directory).\n                </p>\n                <kbd>mkdir /var/www/webseite</kbd><br/><br/>\n                <p>\n                  Anschließend können Sie wie folgt eine neue Datei dort anlegen und bearbeiten.\n                </p>\n                <kbd>touch /var/www/webseite/index.html</kbd><br/>\n                <kbd>nano /var/www/webseite/index.html</kbd>\n              </div>\n          },\n          {\n            type: \"paragraph\",\n            title: '6. Aktivieren Sie den VirtualHost für den Webserver',\n            body:\n              <div>\n                <p>\n                  Damit der Apache2 Webserver die von Ihnen konfigurierte Webseite nun auch ausliefert, müssen Sie zunächst\n                  den dazugehörigen VirtualHost aktivieren. Eine Funktionsbeschreibung dazu finden\n                  Sie <a href=\"https://www.webhosterwissen.de/know-how/eigener-webserver/tutorial-apache-virtual-hosts-anlegen/\" target=\"_blank\" rel=\"noopener noreferrer\">hier</a>.\n                </p>\n                <p>\n                  Gucken Sie sich auch nochmal die Ordner <strong>sites-available</strong> und <strong>sites-enabled</strong> an.\n                  Es gibt eine Veränderung in diesen Verzeichnissen sobald Sie den VirtualHost aktivieren, versuchen Sie\n                  nachzuvollziehen was hierbei passiert.\n                </p>\n              </div>\n          },\n          {\n            type: \"hint\",\n            body:\n              <div>\n                <p>\n                  Den VirtualHost können Sie mit Hilfe des folgenden Kommandos aktivieren.\n                </p>\n                <kbd>a2ensite webseite.conf</kbd><br/><br/>\n                <p>\n                  Anschließend können Sie sehen, dass die Datei aus dem <strong>sites-available</strong> Ordner\n                  in dem <strong>sites-enabled</strong> Ordner verknüpft wurde. Der Webserver nutzt nur die im\n                  enabled-Ordner hinterlegten Konfigurationen, wo nun auch unsere zweite Webseite hinterlegt ist.\n                </p>\n              </div>\n          },\n          {\n            type: \"paragraph\",\n            title: '7. Starten Sie den Webserver neu',\n            body:\n              <div>\n                <p>\n                  Durch den Neustart des Servers, werden die Konfigurationsdateien neu eingelesen, wodurch der\n                  Server im Anschluss Ihre Webseite unter dem neuen Port ausliefern wird. Sollte ein Fehler in\n                  der Konfiguration vorliegen, wird Ihnen dies beim Neustart signalisiert werden.\n                </p>\n                Neustart des Servers: <kbd>service apache2 restart</kbd><br/>\n                Statusmeldung des Diensts: <kbd>service apache2 status</kbd><br/><br/>\n              </div>\n          },\n          {\n            type: \"hint\",\n            body:\n              <div>\n                <p>\n                  Den VirtualHost können Sie mit Hilfe des folgenden Kommandos aktivieren.\n                </p>\n              </div>\n          },\n          {\n            type: \"paragraph\",\n            title: '8. Rufen Sie die Webseite im Browser auf',\n            body:\n              <div>\n                <p>\n                  Nachdem Sie den Server neugestartet haben, können Sie von Ihrem Windows-System aus auf die\n                  Webseiten des Apache2 Servers zugreifen. Prüfen Sie die Funktionalität indem Sie die IP-Adresse\n                  Ihres Servers mit dem jeweiligen Port im Browser aufrufen.\n                </p>\n                <kbd>http://[IP Ihres Servers]:8080</kbd>\n              </div>\n          },\n        ]\n      },\n\n\n      {\n        key: '2.4',\n        name: 'Fileserver',\n        path: '/server/ftp',\n        exact: true,\n        layout: Default,\n        content: [\n          {\n            type: \"header\",\n            title: \"Fileserver\",\n            subTitle: \"Konfigurieren eines FTP-Servers\",\n            mutedSubTitle: \"unter Ubuntu 18.04\"\n          },\n          {\n            type: \"paragraph\",\n            title: 'Ziel der Aufgabe',\n            body:\n              <div>\n                <p>\n                  Die Aufgabe besteht darin einen FTP-Server auf Ihrem System\n                  zu installieren und anschließend zu konfigurieren. Am Ende sollten Sie\n                  per FTP auf das Filesystem Ihres Servers zugreifen können, um Dateien\n                  und Verzeichnisse verwalten zu können.\n                </p>\n              </div>\n          },\n          {\n            type: \"paragraph\",\n            title: '1. Installieren Sie das \"vsftpd\" Paket auf Ihrem System',\n            body:\n              <div>\n                <p>\n                  Um das Paket auf ihrem System zu installieren nutzen sie das\n                  vorhandene Paketverwaltungssystem. Unter Debian/Ubuntu können\n                  Sie hierfür APT benutzen.\n                </p>\n                <p className=\"text-muted\">\n                  Eine genaue Funktionsbeschreibung zur Bedienung von APT finden\n                  Sie <a href=\"https://wiki.ubuntuusers.de/apt/apt-get/\" target=\"_blank\" rel=\"noopener noreferrer\">hier</a>.\n                </p>\n              </div>\n          },\n          {\n            type: \"hint\",\n            body:\n              <div>\n                <p>\n                  Für die Installation von <strong>vsftpd</strong> mit Hilfe des\n                  Paketmanagers <strong>apt</strong>, müssen Sie das folgende\n                  Kommando ausführen:\n                </p>\n                <kbd>apt-get install vsftpd</kbd><br/><br/>\n                <p>\n                  Sollte es wegen fehlenden Berechtigungen während der Installation\n                  zu Problemen kommen, können Sie mit dem Zusatz <kbd>sudo</kbd> vor\n                  dem apt-get Kommando die benötigten Rechte erlangen.\n                </p>\n              </div>\n          },\n          {\n            type: \"paragraph\",\n            title: '2. Konfigurieren Sie das Verhalten des FTP-Servers',\n            body:\n              <div>\n                <p>\n                  Bevor Sie über den Fileserver auf das System zugreifen können, müssen Sie\n                  zunächst Konfigurationen vornehmen. Zum Beispiel ist das Schreiben bzw.\n                  Verändern von Daten auf dem Server per FTP standardmäßig verboten und muss\n                  daher zunächst freigegeben werden.\n                </p>\n                <p>\n                  Anders als bei den bisherigen Serverarten finden Sie die Konfigurationsdatei\n                  des vsftpd direkt unter <strong>/etc/vstfpd.conf</strong>. In dieser Datei\n                  müssen Sie nun den Parameter <strong>WRITE_ENABLE</strong> auf <strong>YES</strong> setzen.\n                </p>\n              </div>\n          },\n          {\n            type: \"hint\",\n            body:\n              <div>\n                <p>\n                  Öffnen Sie die Datei zunächst mit dem folgenden Kommando.\n                </p>\n                <kbd>nano /etc/vsftpd.conf</kbd><br/><br/>\n                <p>\n                  Suchen Sie in dieser Datei den oben genannten Parameter und setzen Sie diesen\n                  auf den Wert <strong>YES</strong>. Achten Sie hierbei darauf, dass die jeweilige\n                  Zeile nicht durch ein <strong>#</strong> auskommentiert wurde.\n                </p>\n              </div>\n          },\n          {\n            type: \"paragraph\",\n            title: '3. Aktivieren Sie den Zugriff durch den Root-User',\n            body:\n              <div>\n                <p>\n                  Aufgrund der Tatsache, dass der Root-User uneigenschränkten Zugriff auf den Server\n                  hat und somit erheblichen Schaden anrichten könnte, hat diese standardmäßig keinen\n                  Zugriff auf das System per FTP.\n                </p>\n                <p>\n                  Damit wir uns nun testweise mit dem Server verbinden können, erlauben wir in diesem\n                  Schritt dem Root-User jedoch die Verbindung per FTP. Entfernen Sie daher <strong>root</strong> aus\n                  der zum Server gehörenden Datei <strong>/etc/ftpusers</strong>.\n                </p>\n                <p>\n                  Starten Sie den Server anschließend neu, damit die Änderungen übernommen werden.\n                </p>\n              </div>\n          },\n          {\n            type: \"hint\",\n            body:\n              <div>\n                <p>\n                  Öffnen Sie die Datei zunächst mit dem folgenden Kommando.\n                </p>\n                <kbd>nano /etc/ftpusers</kbd><br/><br/>\n                <p>\n                  In dieser Datei befindet sich eine Liste mit Usern des Systems, welche für den Zugriff\n                  per FTP ausgeschlossen sind. Damit der Root-User sich nun also verbinden kann, müssen Sie\n                  Ihn aus dieser Liste entfernen.\n                </p>\n                Neustart des Servers: <kbd>service vsftpd restart</kbd><br/>\n                Statusmeldung des Diensts: <kbd>service vsftpd status</kbd><br/><br/>\n              </div>\n          },\n          {\n            type: \"paragraph\",\n            title: '4. Verbinden Sie sich per FTP als Root-User',\n            body:\n              <div>\n                <p>\n                  Um sich mit dem Server per FTP zu verbinden, benötigen Sie zunächst eine entsprechende\n                  Client-Software. Ich empfehle Ihnen hierbei das Programm WinSCP, welches\n                  Sie <a href=\"https://winscp.net/eng/download.php\" target=\"_blank\" rel=\"noopener noreferrer\">hier</a> herunterladen können.\n                </p>\n                <p>\n                  Installieren Sie das Programm und verbinden Sie sich anschließend mit dem Server als Root-User per FTP.\n                </p>\n              </div>\n          },\n          {\n            type: \"hint\",\n            body:\n              <div>\n                <img src=\"/images/winscp.png\" alt=\"WinSCP 1\" width=\"100%\" />\n              </div>\n          },\n          {\n            type: \"paragraph\",\n            title: '5. Legen Sie zusätzliche Benutzer an',\n            body:\n              <div>\n                <p>\n                  Aufgrund der Tatsache, dass der FTP-Server Systemuser für die Authentifizierung bei Nutzung des\n                  Dienstes einsetzt, können Sie einfach einen zusätzlichen Benutzer unter dem Betriebssystem anlegen.\n                </p>\n                <p>\n                  Verbinden Sie sich anschließend mit dem neu angelegten Benutzer. Merken Sie einen Unterschied zur\n                  vorherigen Anmeldung als Root-User?\n                </p>\n              </div>\n          },\n          {\n            type: \"hint\",\n            body:\n              <div>\n                <p>\n                  Um einen neuen Systemuser anzulegen nutzen Sie das folgende Kommando.\n                </p>\n                <kbd>adduser [Name des Benutzers]</kbd><br/><br/>\n                <p>\n                  Öffnen Sie in WinSCP anschließend eine neue Verbindung und nutzen Sie den gerade angelegten User\n                  zur Authentifizierung gegen den FTP-Server.\n                </p>\n              </div>\n          },\n          {\n            type: \"paragraph\",\n            title: '6. Verbinden Sie sich per SFTP auf den Server',\n            body:\n              <div>\n                <p>\n                  Öffnen Sie eine neue Verbindung zu Ihrem Server, dieses Mal allerdings mit Hilfe des Protokolls <strong>SFTP</strong>.\n                </p>\n                <p>\n                  Was ist Vorraussetzung für die Nutzung von SFTP? Bemerken Sie Unterschiede in der Nutzung?\n                </p>\n              </div>\n          },\n          {\n            type: \"hint\",\n            body:\n              <div>\n                <img src=\"/images/winscp2.png\" alt=\"WinSCP 2\" width=\"100%\" />\n              </div>\n          },\n        ]\n      },\n\n\n      {\n        key: '2.5',\n        name: 'Proxyserver',\n        path: '/server/proxy',\n        exact: true,\n        layout: Default,\n        content: [\n          {\n            type: \"header\",\n            title: \"Proxyserver\",\n            subTitle: \"Konfigurieren eines Squid Proxys\",\n            mutedSubTitle: \"unter Ubuntu 18.04\"\n          },\n          {\n            type: \"paragraph\",\n            title: 'Ziel der Aufgabe',\n            body:\n              <div>\n                <p>\n                  Installieren und Konfigurieren Sie einen Squid Proxyserver, welcher\n                  bestimmte Webseiten beim Aufruf durch Clients blockiert. Sperren Sie\n                  die folgenden Webseiten:\n                </p>\n                <ul>\n                  <li>.mario-pizza.de</li>\n                  <li>.luigis-restaurants.de</li>\n                  <li>.google.com</li>\n                </ul>\n              </div>\n          },\n          {\n            type: \"paragraph\",\n            title: '1. Installieren Sie das \"squid\" Paket auf Ihrem System',\n            body:\n              <div>\n                <p>\n                  Um das Paket auf ihrem System zu installieren nutzen sie das\n                  vorhandene Paketverwaltungssystem. Unter Debian/Ubuntu können\n                  Sie hierfür APT benutzen.\n                </p>\n                <p className=\"text-muted\">\n                  Eine genaue Funktionsbeschreibung zur Bedienung von APT finden\n                  Sie <a href=\"https://wiki.ubuntuusers.de/apt/apt-get/\" target=\"_blank\" rel=\"noopener noreferrer\">hier</a>.\n                </p>\n              </div>\n          },\n          {\n            type: \"hint\",\n            body:\n              <div>\n                <p>\n                  Für die Installation von <strong>squid</strong> mit Hilfe des\n                  Paketmanagers <strong>apt</strong>, müssen Sie das folgende\n                  Kommando ausführen:\n                </p>\n                <kbd>apt-get install squid</kbd><br/><br/>\n                <p>\n                  Sollte es wegen fehlenden Berechtigungen während der Installation\n                  zu Problemen kommen, können Sie mit dem Zusatz <kbd>sudo</kbd> vor\n                  dem apt-get Kommando die benötigten Rechte erlangen.\n                </p>\n              </div>\n          },\n          {\n            type: \"paragraph\",\n            title: '2. Öffnen Sie das Installationsverzeichnis der Software',\n            body:\n              <div>\n                <p>\n                Wie auch bei den vorherigen Serverlösungen befindet sich die Software unter \"/etc/squid\". Nutzen Sie die Commands ihres Betriebssystems, um in diesesn Ornder zu navigieren.\n                </p>\n              </div>\n          },\n          {\n            type: \"hint\",\n            body:\n              <div>\n                <p className=\"text-muted\">\n                Mit dem folgenden Command kommen Sie in das Standard Installationsverzeichnis der Software:\n                </p>\n                <kbd>cd /etc/squid</kbd><br/><br/>\n              </div>\n          },\n          {\n            type: \"paragraph\",\n            title: '3. Konfigurieren Sie eine Access Control List für den Proxy',\n            body:\n              <div>\n                <p>\n                  In der Konfigurationsdatei squid.conf können Sie an oberster Stelle neue ACLs konfigurieren. Öffnen Sie dazu die Datei und fügen Sie die benötigten Parameter ganz oben in der Datei hinzu.<br/><br/>\n                  Sie können Domains entweder direkt in der Konfigurationsdatei oder in einer ausgelagerten Datei hinterlegen. Blockieren Sie die folgenden Domains:\n                </p>\n                <ul>\n                  <li>.mario-pizza.de</li>\n                  <li>.luigis-restaurants.de</li>\n                  <li>.google.com</li>\n                </ul>\n                <p className=\"text-muted\">\n                  Eine genaue Funktionsbeschreibung zur Bedienung von APT finden\n                  Sie <a href=\"https://wiki.squid-cache.org/SquidFaq/SquidAcl#How_do_I_implement_an_ACL_ban_list.3F\" target=\"_blank\" rel=\"noopener noreferrer\">hier</a>.\n                </p>\n              </div>\n          },\n          {\n            type: \"hint\",\n            body:\n              <div>\n                <p className=\"text-muted\">\n                Öffnen Sie die Konfigurationsdatei und fügen Sie den benötigten Parameter hinzu:\n                </p>\n                <kbd>nano squid.conf</kbd><br/><br/>\n                <kbd>\n                  acl badurls dstdomain /etc/squid/badurls.acl<br/>\n                  http_access deny badurls\n                </kbd><br/><br/>\n                <p>\n                  Legen Sie nun die ACL-Datei an und füllen Sie diese:\n                </p>\n                <ul>\n                  <li>.mario-pizza.de</li>\n                  <li>.luigis-restaurants.de</li>\n                  <li>.google.com</li>\n                </ul>\n              </div>\n          },\n          {\n            type: \"paragraph\",\n            title: '4. Starten Sie den Proxy neu und prüfen Sie dessen Funktionalität',\n            body:\n              <div>\n                <p>\n                  Durch den Restart werden die Konfigurationsdateien neu eingelesen. Sollte innerhalb dieser Dateien ein Fehler vorliegen, wird dies hierbei bemerkbar.<br/><br/>\n                  Installieren Sie nach dem Neustart des Serverdienstes den Firefox Browser auf ihrem Windows-System und hinterlegen Sie in den Einstellungen des Browsers den Proxy mit der IP-Adresse Ihres Serversystems sowie dem Port 3128. Ab diesem Zeitpunkt läuft jeder HTTP-Request über den konfigurierten Proxy-Server.<br/><br/>\n                  Inwiefern funktionieren die Blockierungen der einzelnen Webseiten? Wie erklären Sie sich das Verhalten des Proxys?\n                </p>\n              </div>\n          },\n          {\n            type: \"hint\",\n            body:\n              <div>\n                <p className=\"text-muted\">\n                  Starten Sie den Server neu mit Hilfe des folgenden Kommandos:\n                </p>\n                <kbd>service squid restart</kbd><br/><br/>\n              </div>\n          },\n        ]\n      }\n\n\n    ],\n  },\n]\n\nexport default viewsArray\n","import React, { Component } from 'react'\nimport { Route } from 'react-router-dom'\nimport './Views.css'\n\nimport viewsArray from './ViewsArray.js'\n\nclass Views extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {}\n    this.buildView = this.buildView.bind(this)\n    this.recursiveBuild = this.recursiveBuild.bind(this)\n  }\n\n  buildView(route) {\n    return (\n      <Route\n        key={route.key}\n        path={route.path}\n        exact={route.exact}\n        component={() =>\n          <route.layout\n            key={route.key}\n            name={route.name}\n            {...route}\n          />\n        }\n      />\n    )\n  }\n\n  recursiveBuild(routes) {\n    return routes.map(route => {\n      let result = []\n      if (route.subs && route.subs.length > 0) {\n        result.push(this.recursiveBuild(route.subs))\n      }\n      result.push(this.buildView(route))\n      return result\n    })\n  }\n\n  render() {\n    const result = this.recursiveBuild(viewsArray)\n    return result\n  }\n\n}\n\nexport default Views\n","import React, { Component } from 'react'\nimport { Router, Switch } from 'react-router-dom'\nimport history from 'utils/history'\n\nimport Views from './Views/Views'\n\nclass ViewRouter extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {}\n  }\n\n  render() {\n    return (\n      <Router history={history}>\n        <Switch>\n          <Views />\n        </Switch>\n      </Router>\n    )\n  }\n}\n\nexport default ViewRouter\n","import React from 'react'\nimport './Footer.css'\n\nfunction Footer() {\n  return (\n    <div id=\"Footer\" className=\"text-muted\">\n      Code on <a href=\"https://github.com/redii/itadm\" target=\"_blank\" rel=\"noopener noreferrer\">Github</a>\n      <span>•</span>\n      Henry Akmann {(new Date()).getFullYear()}\n    </div>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport './App.css'\n\nimport Router from './Router/Router'\nimport Footer from './Footer/Footer'\n\nfunction App() {\n  return (\n    <div id=\"App\">\n      <Router />\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App'\nimport * as serviceWorker from './utils/serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}